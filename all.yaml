# - name: ping the server
#   hosts: web 
#   become: no
#   tasks:
#   - name: ping the server
#     ansible.builtin.ping:

# - name: nginx 
#   hosts: web
#   become: yes
#   tasks:
#   - name: Install
#     ansible.builtin.dnf:
#       name: nginx
#       state: installed
#   - name: start service
#     ansible.builtin.service:
#       name: nginx
#       state: started
#       enabled: yes 

# - name: multiplay
#   hosts: localhost
#   become: no 
#   tasks:
#   - name: play-1 task-1
#     ansible.builtin.debug:
#       msg:  "Play-1,task-1"
#   - name: play-1 task-2
#     ansible.builtin.debug:
#       msg: "Play-1 , task-2"

# - name: multiplay
#   hosts: localhost
#   become: no 
#   tasks:
#   - name: play-2 task-1
#     ansible.builtin.debug:
#       msg:  "Play-1,task-1"
#   - name: play-2 task-2
#     ansible.builtin.debug:
#       msg: "Play-2 , task-2"

# - name: variables
#   hosts: localhost
#   become: no 
#   vars_prompt:
#     name: USERNAME
#     prompt: "ENTER USERNAME::"
#     private: false  
#   tasks:
#   - name: vars1 task
#     ansible.builtin.debug:
#       msg: "{{USERNAME}} {{COURSE}}"  

# - name: datatypes
#   hosts: localhost
#   become: no
#   vars:
#     TOOLS:
#     - NNR 
#     - NNR1
#     - NNR2 
#     TOOLS1:
#       terraform: 2
#       ansible: 3
#     RealProj: true  

#   tasks:
#   - name: datatypes
#     ansible.builtin.debug:
#       msg: "{{TOOLS}} {{TOOLS1}} {{RealProj}}"

- name: id check
  hosts: localhost
  become: yes
  tasks:
  - name: id check
    ansible.builtin.command: id user
    ignore_errors: true
    register: USER

  # - name: print
  #   ansible.builtin.debug:
  #     msg: "Hello {{USER}}"  

  - name: id
    ansible.builtin.command: useradd expense
    when: USER.rc!=0   
    


 
